{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#danish-stt","title":"danish-stt","text":"![GitHub Workflow Status (with event)](https://img.shields.io/github/actions/workflow/status/CogitoNTNU/danish-stt/ci.yml) ![GitHub top language](https://img.shields.io/github/languages/top/CogitoNTNU/danish-stt) ![GitHub language count](https://img.shields.io/github/languages/count/CogitoNTNU/danish-stt) [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT) [![Project Version](https://img.shields.io/badge/version-0.0.1-blue)](https://img.shields.io/badge/version-0.0.1-blue)   \ud83d\udccb Table of contents   - [danish-stt](#danish-stt)   - [Description](#description)   - [\ud83d\udee0\ufe0f Prerequisites](#\ufe0f-prerequisites)   - [Getting started](#getting-started)   - [Usage](#usage)     - [\ud83d\udcd6 Generate Documentation Site](#-generate-documentation-site)   - [Testing](#testing)   - [Contributors](#contributors)     - [License](#license)"},{"location":"#description","title":"Description","text":""},{"location":"#prerequisites","title":"\ud83d\udee0\ufe0f Prerequisites","text":"<ul> <li>Git: Ensure that git is installed on your machine. Download Git</li> <li>Python 3.12: Required for the project. Download Python</li> <li>UV: Used for managing Python environments. Install UV</li> <li>Docker (optional): For DevContainer development. Download Docker</li> </ul>"},{"location":"#getting-started","title":"Getting started","text":"<ol> <li>Clone the repository:</li> </ol> <p><code>sh    git clone https://github.com/CogitoNTNU/danish-stt.git    cd danish-stt</code></p> <ol> <li>Install dependencies:</li> </ol> <p><code>sh    uv sync</code></p> <ol> <li>Set up pre commit (only for development):    <code>sh    uv run pre-commit install</code></li> </ol>"},{"location":"#usage","title":"Usage","text":"<p>To run the project, run the following command from the root directory of the project:</p>"},{"location":"#generate-documentation-site","title":"\ud83d\udcd6 Generate Documentation Site","text":"<p>To build and preview the documentation site locally:</p> <pre><code>uv run mkdocs build\nuv run mkdocs serve\n</code></pre> <p>This will build the documentation and start a local server at http://127.0.0.1:8000/ where you can browse the docs and API reference. Get the documentation according to the lastes commit on main by viewing the <code>gh-pages</code> branch on GitHub: https://cogitontnu.github.io/danish-stt/.</p>"},{"location":"#testing","title":"Testing","text":"<p>To run the test suite, run the following command from the root directory of the project:</p> <pre><code>uv run pytest --doctest-modules --cov=src --cov-report=html\n</code></pre>"},{"location":"#contributors","title":"Contributors","text":"<sub>Eduard Prokhorikhin</sub> <sub>Sverre Nystad</sub>"},{"location":"#license","title":"License","text":"<p>Distributed under the MIT License. See <code>LICENSE</code> for more information.</p>"},{"location":"reference/src/","title":"src","text":""},{"location":"reference/src/#src","title":"src","text":"<p>Modules:</p> <ul> <li> <code>vad_service</code>           \u2013            </li> </ul>"},{"location":"reference/src/vad_service/","title":"src.vad_service","text":""},{"location":"reference/src/vad_service/#src.vad_service","title":"src.vad_service","text":"<p>Functions:</p> <ul> <li> <code>get_vad_timestamps</code>             \u2013              <p>Get voice activity detection (VAD) timestamps from audio waveform.</p> </li> </ul>"},{"location":"reference/src/vad_service/#src.vad_service.get_vad_timestamps","title":"get_vad_timestamps","text":"<pre><code>get_vad_timestamps(wav: Tensor) -&gt; list[dict[str, float]]\n</code></pre> <p>Get voice activity detection (VAD) timestamps from audio waveform.</p> <p>Parameters:</p> <p>Returns:     list[dict[str, float]]: List of dictionaries with 'start' and 'end' keys in seconds.</p> Example <p>from silero_vad import read_audio wav = read_audio(\"tests/english-speech.mp3\") timestamps = get_vad_timestamps(wav) print(timestamps) [{'start': 0.8, 'end': 2.5}, {'start': 2.8, 'end': 4.5}, {'start': 5.0, 'end': 7.0}, {'start': 7.3, 'end': 8.6}, {'start': 9.1, 'end': 10.5}, {'start': 11.3, 'end': 13.2}, {'start': 13.5, 'end': 14.5}, {'start': 14.8, 'end': 15.7}, {'start': 16.5, 'end': 18.1}, {'start': 18.3, 'end': 19.8}]</p> Source code in <code>src/vad_service.py</code> <pre><code>def get_vad_timestamps(wav: Tensor) -&gt; list[dict[str, float]]:\n    \"\"\"\n    Get voice activity detection (VAD) timestamps from audio waveform.\n\n    Args:\n        wav (torch.Tensor): Audio waveform tensor.\n    Returns:\n        list[dict[str, float]]: List of dictionaries with 'start' and 'end' keys in seconds.\n\n    Example:\n        &gt;&gt;&gt; from silero_vad import read_audio\n        &gt;&gt;&gt; wav = read_audio(\"tests/english-speech.mp3\")\n        &gt;&gt;&gt; timestamps = get_vad_timestamps(wav)\n        &gt;&gt;&gt; print(timestamps)\n        [{'start': 0.8, 'end': 2.5}, {'start': 2.8, 'end': 4.5}, {'start': 5.0, 'end': 7.0}, {'start': 7.3, 'end': 8.6}, {'start': 9.1, 'end': 10.5}, {'start': 11.3, 'end': 13.2}, {'start': 13.5, 'end': 14.5}, {'start': 14.8, 'end': 15.7}, {'start': 16.5, 'end': 18.1}, {'start': 18.3, 'end': 19.8}]\n\n    \"\"\"\n    return get_speech_timestamps(\n        wav,\n        model,\n        return_seconds=True,  # Return speech timestamps in seconds (default is samples)\n    )\n</code></pre>"},{"location":"reference/src/vad_service/#src.vad_service.get_vad_timestamps(wav)","title":"<code>wav</code>","text":"(<code>Tensor</code>)           \u2013            <p>Audio waveform tensor.</p>"}]}